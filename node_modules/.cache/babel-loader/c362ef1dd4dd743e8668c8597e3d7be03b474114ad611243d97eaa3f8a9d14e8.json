{"ast":null,"code":"// client/src/services/authService.js\nexport const mockLogin = async credentials => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (credentials.username === \"user\" && credentials.password === \"pass\") {\n        resolve({\n          token: \"mockToken\"\n        }); // Simulate returning a token from the backend\n      } else {\n        reject(new Error(\"Invalid credentials\"));\n      }\n    }, 1000);\n  });\n};","map":{"version":3,"names":["mockLogin","credentials","Promise","resolve","reject","setTimeout","username","password","token","Error"],"sources":["C:/Users/Anton/OneDrive/Desktop/ServerClientApp/client/ServerClientApp/src/frontend/services/authService.js"],"sourcesContent":["// client/src/services/authService.js\r\nexport const mockLogin = async (credentials) => {\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        if (credentials.username === \"user\" && credentials.password === \"pass\") {\r\n          resolve({ token: \"mockToken\" }); // Simulate returning a token from the backend\r\n        } else {\r\n          reject(new Error(\"Invalid credentials\"));\r\n        }\r\n      }, 1000);\r\n    });\r\n  };\r\n  "],"mappings":"AAAA;AACA,OAAO,MAAMA,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC5C,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtCC,UAAU,CAAC,MAAM;MACf,IAAIJ,WAAW,CAACK,QAAQ,KAAK,MAAM,IAAIL,WAAW,CAACM,QAAQ,KAAK,MAAM,EAAE;QACtEJ,OAAO,CAAC;UAAEK,KAAK,EAAE;QAAY,CAAC,CAAC,CAAC,CAAC;MACnC,CAAC,MAAM;QACLJ,MAAM,CAAC,IAAIK,KAAK,CAAC,qBAAqB,CAAC,CAAC;MAC1C;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,CAAC;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}