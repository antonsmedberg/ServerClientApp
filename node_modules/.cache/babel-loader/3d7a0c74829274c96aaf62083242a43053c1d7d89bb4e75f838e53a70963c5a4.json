{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anton\\\\OneDrive\\\\Desktop\\\\ServerClientApp\\\\client\\\\ServerClientApp\\\\src\\\\frontend\\\\components\\\\ServerControls.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { ServerStatusContext } from './context/ServerStatusContext';\nimport Button from './Button';\nimport './ServerControls.css';\n\n// Custom hook for debouncing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useDebounce(value, delay) {\n  _s();\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => setDebouncedValue(value), delay);\n    return () => clearTimeout(handler);\n  }, [value, delay]);\n  return debouncedValue;\n}\n_s(useDebounce, \"KDuPAtDOgxm8PU6legVJOb3oOmA=\");\nconst ServerControls = () => {\n  _s2();\n  const {\n    status,\n    onCommand\n  } = useContext(ServerStatusContext);\n  const [commandInput, setCommandInput] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const debouncedCommandInput = useDebounce(commandInput, 300);\n  useEffect(() => {\n    const updateSuggestions = input => {\n      setSuggestions(input ? commandsList.filter(cmd => cmd.startsWith(input)) : []);\n    };\n    updateSuggestions(debouncedCommandInput);\n  }, [debouncedCommandInput]);\n  const commandsList = ['restart', 'shutdown', 'status', 'update'];\n  const submitCommand = () => {\n    onCommand(commandInput);\n    setCommandInput('');\n    setSuggestions([]);\n  };\n  const handleSuggestionClick = suggestion => {\n    setCommandInput(suggestion);\n    // Optionally, focus the input after selection for better keyboard navigation\n    inputRef.current.focus();\n  };\n\n  // Add a ref to the input element\n  const inputRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"server-controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Server Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Server Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: commandInput,\n      onChange: e => setCommandInput(e.target.value),\n      placeholder: \"Enter server command\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"Send Command\",\n      onClick: submitCommand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions\",\n      children: suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCommandInput(suggestion),\n        className: \"suggestion-item\",\n        children: suggestion\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s2(ServerControls, \"vO43I0J5S+KSIa1LA1Rc2Ko9uuI=\", false, function () {\n  return [useDebounce];\n});\n_c = ServerControls;\nexport default ServerControls;\nvar _c;\n$RefreshReg$(_c, \"ServerControls\");","map":{"version":3,"names":["React","useState","useContext","useEffect","ServerStatusContext","Button","jsxDEV","_jsxDEV","useDebounce","value","delay","_s","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","ServerControls","_s2","status","onCommand","commandInput","setCommandInput","suggestions","setSuggestions","debouncedCommandInput","updateSuggestions","input","commandsList","filter","cmd","startsWith","submitCommand","handleSuggestionClick","suggestion","inputRef","current","focus","useRef","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","placeholder","text","onClick","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Anton/OneDrive/Desktop/ServerClientApp/client/ServerClientApp/src/frontend/components/ServerControls.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { ServerStatusContext } from './context/ServerStatusContext';\r\nimport Button from './Button';\r\nimport './ServerControls.css';\r\n\r\n// Custom hook for debouncing\r\nfunction useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => setDebouncedValue(value), delay);\r\n    return () => clearTimeout(handler);\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n\r\nconst ServerControls = () => {\r\n  const { status, onCommand } = useContext(ServerStatusContext);\r\n  const [commandInput, setCommandInput] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const debouncedCommandInput = useDebounce(commandInput, 300);\r\n  \r\n  useEffect(() => {\r\n    const updateSuggestions = (input) => {\r\n      setSuggestions(input ? commandsList.filter(cmd => cmd.startsWith(input)) : []);\r\n    };\r\n\r\n    updateSuggestions(debouncedCommandInput);\r\n  }, [debouncedCommandInput]);\r\n\r\n  const commandsList = ['restart', 'shutdown', 'status', 'update'];\r\n\r\n  const submitCommand = () => {\r\n    onCommand(commandInput);\r\n    setCommandInput('');\r\n    setSuggestions([]);\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setCommandInput(suggestion);\r\n    // Optionally, focus the input after selection for better keyboard navigation\r\n    inputRef.current.focus();\r\n  };\r\n  \r\n  // Add a ref to the input element\r\n  const inputRef = useRef(null);\r\n  \r\n\r\n  return (\r\n    <div className=\"server-controls\">\r\n      <h3>Server Management</h3>\r\n      <p>Server Status: {status}</p>\r\n      <input \r\n        type=\"text\" \r\n        value={commandInput} \r\n        onChange={(e) => setCommandInput(e.target.value)} \r\n        placeholder=\"Enter server command\" \r\n      />\r\n      <Button text=\"Send Command\" onClick={submitCommand} />\r\n      {suggestions.length > 0 && (\r\n        <div className=\"suggestions\">\r\n          {suggestions.map((suggestion, index) => (\r\n            <button key={index} onClick={() => setCommandInput(suggestion)} className=\"suggestion-item\">\r\n              {suggestion}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ServerControls;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}