{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anton\\\\OneDrive\\\\Desktop\\\\ServerClientApp\\\\client\\\\ServerClientApp\\\\src\\\\frontend\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\nimport Footer from '../components/Footer';\nimport { fetchData } from '../services/apiService';\nimport './HomePage.css';\nimport ServerControls from '../components/ServerControls';\nimport ServerSetupForm from '../components/ServerSetupForm'; // Import the setup form\nimport Modal from '../components/Modal'; // Import the Modal component\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState('');\n  const [serverStatus, setServerStatus] = useState('Checking...');\n  const [serverOutput, setServerOutput] = useState([]);\n  const [isSetupFormOpen, setIsSetupFormOpen] = useState(false); // State to control modal visibility\n\n  // Consolidate useEffect hooks for initial data fetching and server status checking if possible\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const result = await fetchData();\n        setData(result);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error fetching data. Please try again.');\n      }\n    };\n    loadData();\n\n    // Removed the duplicate server status polling for demonstration\n  }, []);\n  const handleServerAction = async action => {\n    // Consolidating server action handlers into a single function\n    console.log(`${action} server...`);\n    // This is where you'd ideally call an API to actually start/stop/restart the server\n    // For now, simulate the action with setTimeout\n    setTimeout(() => {\n      const newStatus = action === 'stop' ? 'Offline' : 'Online';\n      const actionResult = `Server ${action} successfully`;\n      setServerStatus(newStatus);\n      setServerOutput(prevOutput => [...prevOutput, actionResult]);\n    }, 1000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(ServerControls, {\n        status: serverStatus,\n        onStart: () => handleServerAction('start'),\n        onStop: () => handleServerAction('stop'),\n        onCommand: handleServerAction // Assuming onCommand can accept 'start'/'stop' commands\n        ,\n        output: serverOutput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to My Application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Setup New Server\",\n          onClick: () => setIsSetupFormOpen(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          isOpen: isSetupFormOpen,\n          onClose: () => setIsSetupFormOpen(false),\n          children: /*#__PURE__*/_jsxDEV(ServerSetupForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Click Me\",\n          onClick: () => alert('Button clicked!')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"data-loaded\",\n          children: [\"Data loaded: \", JSON.stringify(data, null, 2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"z32fe1uqING3wteIj2evfyxjk7A=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","Header","Button","Footer","fetchData","ServerControls","ServerSetupForm","Modal","toast","jsxDEV","_jsxDEV","HomePage","_s","data","setData","error","setError","serverStatus","setServerStatus","serverOutput","setServerOutput","isSetupFormOpen","setIsSetupFormOpen","loadData","result","console","handleServerAction","action","log","setTimeout","newStatus","actionResult","prevOutput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","status","onStart","onStop","onCommand","output","text","onClick","isOpen","onClose","alert","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Anton/OneDrive/Desktop/ServerClientApp/client/ServerClientApp/src/frontend/pages/HomePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Header from '../components/Header';\r\nimport Button from '../components/Button';\r\nimport Footer from '../components/Footer';\r\nimport { fetchData } from '../services/apiService';\r\nimport './HomePage.css';\r\nimport ServerControls from '../components/ServerControls';\r\nimport ServerSetupForm from '../components/ServerSetupForm'; // Import the setup form\r\nimport Modal from '../components/Modal'; // Import the Modal component\r\nimport { toast } from 'react-toastify';\r\n\r\nconst HomePage = () => {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState('');\r\n  const [serverStatus, setServerStatus] = useState('Checking...');\r\n  const [serverOutput, setServerOutput] = useState([]);\r\n  const [isSetupFormOpen, setIsSetupFormOpen] = useState(false); // State to control modal visibility\r\n\r\n  // Consolidate useEffect hooks for initial data fetching and server status checking if possible\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        const result = await fetchData();\r\n        setData(result);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        setError('Error fetching data. Please try again.');\r\n      }\r\n    };\r\n\r\n    loadData();\r\n\r\n    // Removed the duplicate server status polling for demonstration\r\n  }, []);\r\n\r\n  const handleServerAction = async (action) => {\r\n    // Consolidating server action handlers into a single function\r\n    console.log(`${action} server...`);\r\n    // This is where you'd ideally call an API to actually start/stop/restart the server\r\n    // For now, simulate the action with setTimeout\r\n    setTimeout(() => {\r\n      const newStatus = action === 'stop' ? 'Offline' : 'Online';\r\n      const actionResult = `Server ${action} successfully`;\r\n\r\n      setServerStatus(newStatus);\r\n      setServerOutput((prevOutput) => [...prevOutput, actionResult]);\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <Header />\r\n      <main className=\"main-content\">\r\n        <ServerControls\r\n          status={serverStatus}\r\n          onStart={() => handleServerAction('start')}\r\n          onStop={() => handleServerAction('stop')}\r\n          onCommand={handleServerAction} // Assuming onCommand can accept 'start'/'stop' commands\r\n          output={serverOutput}\r\n        />\r\n        <div className=\"app-content\">\r\n          <h2>Welcome to My Application</h2>\r\n          <Button text=\"Setup New Server\" onClick={() => setIsSetupFormOpen(true)} />\r\n          <Modal isOpen={isSetupFormOpen} onClose={() => setIsSetupFormOpen(false)}>\r\n            <ServerSetupForm />\r\n            </Modal>\r\n          {/* Existing content rendering */}\r\n          <Button text=\"Click Me\" onClick={() => alert('Button clicked!')} />\r\n          {error ? (\r\n            <p className=\"error-message\">{error}</p>\r\n          ) : (\r\n            <p className=\"data-loaded\">Data loaded: {JSON.stringify(data, null, 2)}</p>\r\n          )}\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}