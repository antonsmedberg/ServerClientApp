{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anton\\\\OneDrive\\\\Desktop\\\\ServerClientApp\\\\client\\\\ServerClientApp\\\\src\\\\frontend\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// client/src/pages/LoginPage.js\nimport React, { useState, useContext } from 'react';\nimport { AuthContext } from '../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const {\n    login\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  // Additional lines in LoginPage.js for loading state\n  const [isLoading, setIsLoading] = useState(false);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCredentials({\n      ...credentials,\n      [name]: value\n    });\n  };\n\n  // Adjust handleSubmit to manage loading state\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      await login(credentials);\n      navigate('/');\n    } catch (error) {\n      alert('Login failed');\n      setIsLoading(false); // Stop loading on failure\n    }\n  };\n\n  // Update the return statement to show loading feedback\n  {\n    isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 34\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: credentials.username,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: credentials.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"ZnPTMtXzKWemctT2h1k1vBqda+g=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","useNavigate","axios","jsxDEV","_jsxDEV","LoginPage","_s","credentials","setCredentials","username","password","login","navigate","isLoading","setIsLoading","handleChange","e","name","value","target","handleSubmit","preventDefault","error","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onSubmit","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Anton/OneDrive/Desktop/ServerClientApp/client/ServerClientApp/src/frontend/pages/LoginPage.js"],"sourcesContent":["// client/src/pages/LoginPage.js\r\nimport React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst LoginPage = () => {\r\n  const [credentials, setCredentials] = useState({ username: '', password: '' });\r\n  const { login } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  // Additional lines in LoginPage.js for loading state\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCredentials({ ...credentials, [name]: value });\r\n  };\r\n\r\n  // Adjust handleSubmit to manage loading state\r\n  const handleSubmit = async (e) => {\r\n  e.preventDefault();\r\n  setIsLoading(true);\r\n  try {\r\n    await login(credentials);\r\n    navigate('/');\r\n  } catch (error) {\r\n    alert('Login failed');\r\n    setIsLoading(false); // Stop loading on failure\r\n  }\r\n};\r\n\r\n// Update the return statement to show loading feedback\r\n{isLoading ? <p>Loading...</p> : <button type=\"submit\">Login</button>}\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Username:\r\n        <input type=\"text\" name=\"username\" value={credentials.username} onChange={handleChange} />\r\n      </label>\r\n      <label>\r\n        Password:\r\n        <input type=\"password\" name=\"password\" value={credentials.password} onChange={handleChange} />\r\n      </label>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}